using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using JLT.SEG.WEB.Util;
using JLT.SEG.Helper;
using System.Web.Configuration;
using JLT.SEG.Negocio;
using JLT.SEG.Entidades;

namespace JLT.SEG.WEB.Permisos
{
    public partial class frmPermisoObjetoDetalle : PaginaBase
    {
        private const string ID_FORMULARIO = "frmPermisoObjetoDetalle";

        protected new void Page_Load(object sender, EventArgs e)
        {
            try
            {
                if (!Page.IsPostBack)
                {
                    CargarDatosIniciales();
                }
                CargarPermisosObjetosFormulario(ID_FORMULARIO);
            }
            catch (Exception ex)
            {
                MessageBox.Show(WebConfigurationManager.AppSettings[Constantes.MSG_ERROR_GENERAL]);
                NetLogger.WriteLog(ELogLevel.ERROR, ex.Message + Environment.NewLine + ex.StackTrace);
            }
        }

        private void CargarDatosIniciales()
        {
            BLAplicacion blAplicacion = new BLAplicacion();
            Formularios.CargarDropDownList(ddlAplicativo,
                                           blAplicacion.ListarAplicacion(),
                                           Constantes.TEXTO_DDL_APLICATIVO,
                                           Constantes.VALUE_DDL_APLICATIVO,
                                           Constantes.DEFAULT_DDL_APLICATIVO);            
            Formularios.CargarDropDownList(ddlRol,
                                           new List<BERol>(),
                                           Constantes.TEXTO_DDL_ROL,
                                           Constantes.VALUE_DDL_ROL,
                                           Constantes.DEFAULT_DDL_ROL);

            Formularios.CargarDropDownList(ddlObjeto,
                                           new List<BEObjeto>(),
                                           Constantes.TEXTO_DDL_OBJETO,
                                           Constantes.VALUE_DDL_OBJETO,
                                           Constantes.DEFAULT_DDL_OBJETO);

        }

        protected void btnGuardar_Click(object sender, EventArgs e)
        {
            try
            {
                BEPermisoObjeto permisoObjeto = new BEPermisoObjeto();
                permisoObjeto.BEObjeto = new BEObjeto();
                permisoObjeto.BEObjeto.IdObjeto = Convert.ToInt16(ddlObjeto.SelectedValue);
                permisoObjeto.BERol = new BERol();
                permisoObjeto.BERol.IdRol = Convert.ToInt16(ddlRol.SelectedValue);
                permisoObjeto.BEAplicacion = new BEAplicacion();
                permisoObjeto.BEAplicacion.IdAplicacion = Convert.ToInt16(ddlAplicativo.SelectedValue);
                permisoObjeto.EstadoPermisoObjeto = true;
                permisoObjeto.FechaCreacion = DateTime.Now;

                bool insertarPermisosObjetosHijos = false;
                if (chkPermisoSubObjetos.Checked)
                {
                    insertarPermisosObjetosHijos = true;
                }

                BLPermisoObjeto blPermisoObjeto = new BLPermisoObjeto();
                bool registroExitoso = blPermisoObjeto.InsertarPermisoObjeto(permisoObjeto, insertarPermisosObjetosHijos);
                if (registroExitoso)
                {
                    if (insertarPermisosObjetosHijos)
                    {
                        MessageBox.ShowAlertRedirect(WebConfigurationManager.AppSettings[Constantes.MSG_PERMISO_OBJETOS_REGISTRADOS_EXITOSAMENTE], WebConfigurationManager.AppSettings[Constantes.DIRECCION_FRM_PERMISO_OBJETO_BUSCAR]);
                    }
                    else
                    {
                        MessageBox.ShowAlertRedirect(WebConfigurationManager.AppSettings[Constantes.MSG_PERMISO_OBJETO_REGISTRADO_EXITOSAMENTE], WebConfigurationManager.AppSettings[Constantes.DIRECCION_FRM_PERMISO_OBJETO_BUSCAR]);
                    }
                }
                else
                {
                    MessageBox.ShowAlert(WebConfigurationManager.AppSettings[Constantes.MSG_ERROR_OBJETO_PADRE_NO_TIENE_PERMISO]);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(WebConfigurationManager.AppSettings[Constantes.MSG_ERROR_GENERAL]);
                NetLogger.WriteLog(ELogLevel.ERROR, ex.Message + Environment.NewLine + ex.StackTrace);
            }
        }

        protected void btnLimpiar_Click(object sender, EventArgs e)
        {
            try
            {
                ddlAplicativo.SelectedIndex = 0;

                Formularios.CargarDropDownList(ddlRol,
                               new List<BERol>(),
                               Constantes.TEXTO_DDL_ROL,
                               Constantes.VALUE_DDL_ROL,
                               Constantes.DEFAULT_DDL_ROL);

                Formularios.CargarDropDownList(ddlObjeto,
                                               new List<BEObjeto>(),
                                               Constantes.TEXTO_DDL_OBJETO,
                                               Constantes.VALUE_DDL_OBJETO,
                                               Constantes.DEFAULT_DDL_OBJETO);
                chkPermisoSubObjetos.Checked = false;
            }
            catch (Exception ex)
            {
                MessageBox.Show(WebConfigurationManager.AppSettings[Constantes.MSG_ERROR_GENERAL]);
                NetLogger.WriteLog(ELogLevel.ERROR, ex.Message + Environment.NewLine + ex.StackTrace);
            }
        }

        protected void btnSalir_Click(object sender, EventArgs e)
        {
            try
            {
                Response.Redirect(WebConfigurationManager.AppSettings[Constantes.DIRECCION_FRM_PERMISO_OBJETO_BUSCAR],false);
            }
            catch (Exception ex)
            {
                MessageBox.Show(WebConfigurationManager.AppSettings[Constantes.MSG_ERROR_GENERAL]);
                NetLogger.WriteLog(ELogLevel.ERROR, ex.Message + Environment.NewLine + ex.StackTrace);
            }
        }

        protected void ddlAplicativo_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                BLRol blRol = new BLRol();
                Formularios.CargarDropDownList(ddlRol,
                                               blRol.ListarRolesPorAplicacion(Convert.ToInt16(ddlAplicativo.SelectedValue)),
                                           Constantes.TEXTO_DDL_ROL,
                                           Constantes.VALUE_DDL_ROL,
                                           Constantes.DEFAULT_DDL_ROL);
                CargarObjetos();
            }
            catch (Exception ex)
            {
                MessageBox.Show(WebConfigurationManager.AppSettings[Constantes.MSG_ERROR_GENERAL]);
                NetLogger.WriteLog(ELogLevel.ERROR, ex.Message + Environment.NewLine + ex.StackTrace);
            }
        }

        protected void ddlRol_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                CargarObjetos();
            }
            catch (Exception ex)
            {
                MessageBox.Show(WebConfigurationManager.AppSettings[Constantes.MSG_ERROR_GENERAL]);
                NetLogger.WriteLog(ELogLevel.ERROR, ex.Message + Environment.NewLine + ex.StackTrace);
            }
        }

        private void CargarObjetos()
        {
            if (ddlAplicativo.SelectedIndex > 0 && ddlRol.SelectedIndex > 0)
            {
                BLObjeto blObjeto = new BLObjeto();
                Formularios.CargarDropDownList(ddlObjeto,
                                               blObjeto.ListarObjetoSinPermisosAsignados(Convert.ToInt16(ddlAplicativo.SelectedValue), Convert.ToInt16(ddlRol.SelectedValue)),
                                           Constantes.TEXTO_DDL_OBJETO,
                                           Constantes.VALUE_DDL_OBJETO,
                                           Constantes.DEFAULT_DDL_OBJETO);
            }
            else
            {
                BLObjeto blObjeto = new BLObjeto();
                Formularios.CargarDropDownList(ddlObjeto,
                                               new List<BEObjeto>(),
                                           Constantes.TEXTO_DDL_OBJETO,
                                           Constantes.VALUE_DDL_OBJETO,
                                           Constantes.DEFAULT_DDL_OBJETO);
            }
        }

        override protected void OnInit(EventArgs e)
        {
            this.Load += new System.EventHandler(this.Page_Load);
        }
    }
}
